@{
  ViewBag.NgApp = "missionlineApp";
  ViewBag.Title = ViewBag.MySelf.Name;
}
<div ng-controller="MeCtrl">
  <div class="row">
    <div class="col-xs-12 col-md-6 col-md-offset-3 list-group" ng-cloak="true">
      <div class="panel panel-warning" ng-if="isInUnassigned()">
        <div class="panel-heading">Unassigned Signin</div>
        <div class="panel-body">
          <p><strong>You signed into the mission line but we didn't catch which mission you wanted to sign in with. Please sign out and sign into another mission.</strong></p>
          <button class="btn pull-right" ng-click="signout({id: null})">Sign Out</button>
        </div>
      </div>
    </div>
    <div class="col-xs-12 col-md-6 col-md-offset-3 list-group" ng-cloak="true">
      <div class="list-group-item clearfix" ng-repeat="event in events | orderBy:eventsSortPredicate">
        <i class="fa fa-2x fa-fw fa-pull-left" ng-class="{'fa-ban': event.closed, 'fa-bullhorn': !event.closed }"></i>
        <div class="pull-right">
          <button class="btn btn-success btn-block" ng-click="signin(event)" ng-if="canSignIn(event)">Sign In</button>
          <button class="btn btn-block" ng-click="signout(event)" ng-if="canSignOut(event)">Sign Out</button>
          <a class="btn btn-info btn-block" ng-href="/events/{{event.id}}/carpooling">Carpool</a>
        </div>
        <div style="padding-left: 3.6em">
          <h4 class="list-group-item-heading" ng-class="{'font-bold': !event.closed}">{{event.name}}</h4>
          <p>Opened {{event.opened.fromNow()}}, {{event.roster.length}} responders</p>
          <p><strong>{{getEventStatus(event)}}</strong></p>
        </div>
      </div>
    </div>
    <div class="col-xs-12 col-md-6 col-md-offset-3">
      View the <a href="~/dashboard">Dashboard</a>
    </div>
  </div>
</div>

<script type="text/ng-template" id="signoutDialog.html">
  <p>Sign out from <strong>{{model.name}}</strong><span ng-if="model.next"> before signing into {{model.next}}</span>?</p>
</script>
@RenderPage("_SignoutDialog.cshtml")

@section scripts {
  @Scripts.Render("~/bundles/app")
  <script type="text/javascript">
    var memberId = '@ViewBag.MySelf.Id';
    angular.module('missionlineApp').controller('MeCtrl', ['$scope', '$rootScope',
      'EditModalService', 'eventsService', 'rosterService',
      function ($scope, $rootScope, EditModalService, eventsService, rosterService) {
        $.extend($scope, {
          events: eventsService.list,
          eventsSortPredicate: function (event) {
            return -event.opened.unix() + (event.closed ? 100000000 : 0);
          },
          getEventStatus: function (event) {
            var parts = rosterService.signins.filter(function (f) {
              return f.memberId == memberId && f.eventId == event.id
            });
            if (!parts.length) { return null; }
            if (parts[0].timeOut) {
              return "You signed out " + parts[0].timeOut.fromNow();
            }
            else {
              return "You signed in " + parts[0].timeIn.fromNow();
            }
          },
          canSignIn: function (event) {
            return !event.closed
              && rosterService.signins
                .filter(function (f) {
                  return f.memberId == memberId && f.eventId == event.id && !f.timeOut
                }).length == 0;
          },
          canSignOut: function (event) {
            return rosterService.signins.filter(function (f) {
              return f.memberId == memberId && f.eventId == event.id && !f.timeOut
            }).length > 0;
          },
          signin: function (evt) {
            var signedInEvents = rosterService.signins.filter(function (f) {
              return f.memberId == memberId && !f.timeOut && f.eventId != evt.id
            });
            if (signedInEvents.length) {
              if (signedInEvents[0].eventId == evt.id) {
                alert('Already signed in');
                return;
              }
              else {
                alert('Must sign out from other missions first');
                return;
              }
            }

            if (!confirm("Sign into " + evt.name + "?")) {
              return;
            }
            rosterService.save(new SigninModel({ eventId: evt.id, memberId: memberId, timeIn: moment() }));
          },
          signout: function (evt) {
            var rosterEntry = rosterService.signins.filter(function (f) { return f.memberId == memberId && f.eventId == evt.id && !f.timeOut });
            if (rosterEntry.length > 0) {
              var data = rosterEntry[0].getData();
              data.timeOut = moment();
              EditModalService.edit('signoutDialog.html', 'Sign Out', new SigninModel(data), rosterService.save, { event: evt });

            } else {
              alert("Couldn't figure out how to sign you out");
            }
          },
          isInUnassigned: function () {
            return rosterService.signins.filter(function (f) { return f.memberId == memberId && f.eventId == null && !f.timeOut; }).length > 0;
          }
        })

        eventsService.load();
        rosterService.load();
      }]);

    window.hasHubs = true;
  </script>
}
